# A two line theme inspired by paradox.
#
# This theme requires a font that has been patched by NerdFonts.
# https://github.com/ryanoasis/nerd-fonts
#
# Authors:
#   Eric Cool <coolazura@gmail.com>
#

# Load dependencies.
pmodload 'helper'

function prompt_terminus_build_lprompt {
  print -n ">>> "
}

function prompt_terminus_build_rprompt {
  print -n "$(prompt_terminus_print_clock)%D{%H:%M:%S}"
}

function prompt_terminus_print_clock {
  typeset -A clocks
  clocks=(1 "" 2 "" 3 "" 4 "" 5 "" 6 "" 7 "" 8 "" 9 "" 10 "" 11 "" 12 "")

  # Get the current hour in a 12hour format.
  local hour=$(date +"%-I")

  # Print the clock icon.
  print -n "%B${clocks[$hour]}%b"
}

# SEE: paradox
function prompt_terminus_preexec {
  _prompt_terminus_start_time="$SECONDS"
}

# SEE: paradox
function prompt_terminus_print_elapsed_time() {
  local end_time=$(( SECONDS - _prompt_terminus_start_time ))
  local hours minutes seconds remainder

  if (( end_time >= 3600 )); then
    hours=$(( end_time / 3600 ))
    remainder=$(( end_time % 3600 ))
    minutes=$(( remainder / 60 ))
    seconds=$(( remainder % 60 ))
    print -P "%B%F{red} ﲊ elapsed time ${hours}h ${minutes}m ${seconds}s%b"
  elif (( end_time >= 60 )); then
    minutes=$(( end_time / 60 ))
    seconds=$(( end_time % 60 ))
    print -P "%B%F{yellow} 羽elapsed time ${minutes}m ${seconds}s%b"
  elif (( end_time > 10 )); then
    print -P "%B%F{green} ﮫ elapsed time ${end_time}s%b"
  fi
}

# SEE: paradox
function prompt_terminus_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi

  # Get Python environment information.
  if (( $+functions[python-info] )); then
    python-info
  fi

  # Calculate and print the elapsed time.
  prompt_terminus_print_elapsed_time
}

function prompt_terminus_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling precmd before each command.
  add-zsh-hook preexec prompt_terminus_preexec
  add-zsh-hook precmd prompt_terminus_precmd

  # Tell prezto we can manage this prompt
  zstyle ':prezto:module:prompt' managed 'yes'

  # Set editor-info parameters. SEE: paradox
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{blue}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{red}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{red}❮%f%b'

  # Set git-info parameters. SEE: paradox
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format ' ⁝ %s'
  zstyle ':prezto:module:git:info:added' format ' ✚'
  zstyle ':prezto:module:git:info:ahead' format ' ⬆'
  zstyle ':prezto:module:git:info:behind' format ' ⬇'
  zstyle ':prezto:module:git:info:branch' format ' %b'
  zstyle ':prezto:module:git:info:commit' format '➦ %.7c'
  zstyle ':prezto:module:git:info:deleted' format ' ✖'
  zstyle ':prezto:module:git:info:dirty' format ' ⁝'
  zstyle ':prezto:module:git:info:modified' format ' ✱'
  zstyle ':prezto:module:git:info:position' format '%p'
  zstyle ':prezto:module:git:info:renamed' format ' ➙'
  zstyle ':prezto:module:git:info:stashed' format ' S'
  zstyle ':prezto:module:git:info:unmerged' format ' ═'
  zstyle ':prezto:module:git:info:untracked' format ' ?'
  zstyle ':prezto:module:git:info:keys' format \
    'ref' '$(coalesce "%b" "%p" "%c")' \
    'status' '%s%D%A%B%S%a%d%m%r%U%u'

  # %v - virtualenv name.
  zstyle ':prezto:module:python:info:virtualenv' format ' %v'

  # Define prompts.
  PROMPT='
$(prompt_terminus_build_lprompt)'
  RPROMPT='$(prompt_terminus_build_rprompt)'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_terminus_setup "$@"
